<?xml version='1.0' ?>
<map>
	

<select id="get_address">
	SELECT
	   `streetno`
	  , `streetname`
	  , `barangay`
	  , `citytown`
	  , `country`
	  , `postalcode`
	  , `type`
	  , `telephone`
	  , `mobile`
	  , `consignee`
	FROM `es_address`
	WHERE TYPE = 1
	AND id_member = :id_member
	limit 1
</select>

<select id="payment_transaction">
	CALL es_sp_Payment_order(
		:payment_type,
		:invoice_no,
		:total_amt,
		:ip,
		:member_id,
		:string,
		:product_count,
		:data_response
	)
</select>

<select id="updatePaymentIfComplete">
	UPDATE 
	  es_order 
	SET
	  `order_status` = 0
	  , `data_response` = :data 
	WHERE `id_order` = :id_order 
</select>

<!--
<select id="getTransactionDetails">
	SELECT o.id_order, buyer.username as buyer, buyer.email as buyer_email, DATE_FORMAT(o.dateadded, "%D %M %Y") as dateadded, o.total as totalprice, op.id_order_product, seller.id_member as seller_id, seller.username as seller, seller.email as seller_email, p.name, op.order_quantity, op.price as baseprice, op.tax, op.total as finalprice, attr.name as attr_name, pattr.attr_value
	FROM es_order o
	INNER JOIN es_order_product op 
		ON op.order_id = o.id_order AND o.buyer_id = :buyer_id AND o.id_order = :order_id
	INNER JOIN es_product p
		ON op.product_id = p.id_product
	LEFT JOIN es_order_option opt
		ON opt.order_product_id = op.id_order_product
	LEFT JOIN es_product_attr pattr
		ON pattr.id_product_attr = opt.product_attr_id 
	LEFT JOIN es_attr attr
		ON opt.attr_id = attr.id_attr
	LEFT JOIN es_member seller
		ON op.seller_id = seller.id_member
	LEFT JOIN es_member buyer
		ON o.buyer_id = buyer.id_member
</select>
-->

<select id="getPurchaseTransactionDetails">
	SELECT o.id_order, buyer.username as buyer, buyer.email as buyer_email, DATE_FORMAT(o.dateadded, "%D %M %Y") as dateadded, o.total as totalprice, op.id_order_product, seller.id_member as seller_id, seller.username as seller, seller.email as seller_email, p.name, op.order_quantity, op.price as baseprice, op.tax, op.total as finalprice, attr.name as attr_name, pattr.attr_value,  pitemattr.is_other, oah.field_name, oad.value_name, buyer.email as buyer_email, o.invoice_no, 
		COALESCE(buyer.contactno, '0') as buyer_contactno, COALESCE(seller.contactno, '0') as seller_contactno
	FROM es_order o
	INNER JOIN es_order_product op 
		ON op.order_id = o.id_order AND o.buyer_id = :buyer_id AND o.id_order = :order_id AND o.invoice_no = :invoice_no
	INNER JOIN es_product p
		ON op.product_id = p.id_product
	LEFT JOIN es_product_item_attr pitemattr
		ON op.product_item_id = pitemattr.product_id_item
	LEFT JOIN es_product_attr pattr
		ON pattr.id_product_attr = pitemattr.product_attr_id 
	LEFT JOIN es_attr attr
		ON pattr.attr_id = attr.id_attr
	LEFT JOIN es_optional_attrdetail oad
		ON	oad.id_optional_attrdetail = pitemattr.product_attr_id
	LEFT JOIN es_optional_attrhead oah
		ON oah.id_optional_attrhead = oad.head_id
	LEFT JOIN es_member seller
		ON op.seller_id = seller.id_member
	LEFT JOIN es_member buyer
		ON o.buyer_id = buyer.id_member
</select>

<select id="getOrderProductTransactionDetails">
	SELECT	o.id_order, o.invoice_no, op.id_order_product 
		,p.name as product_name, op.order_quantity, op.total
		,attr.name as attr_name, pattr.attr_value,  pitemattr.is_other, oah.field_name, oad.value_name
		,seller.username as seller, seller.email as seller_email, seller.contactno as seller_contactno, buyer.username as buyer, buyer.email as buyer_email, buyer.contactno as buyer_contactno
	FROM es_order o
	INNER JOIN es_order_product op 
		ON op.order_id = o.id_order AND op.order_id = :order_id AND op.id_order_product = :order_product_id AND o.invoice_no = :invoice_num
	INNER JOIN es_product p
		ON op.product_id = p.id_product
	LEFT JOIN es_product_item_attr pitemattr
		ON op.product_item_id = pitemattr.product_id_item
	LEFT JOIN es_product_attr pattr
		ON pattr.id_product_attr = pitemattr.product_attr_id 
	LEFT JOIN es_attr attr
		ON pattr.attr_id = attr.id_attr
	LEFT JOIN es_optional_attrdetail oad
		ON	oad.id_optional_attrdetail = pitemattr.product_attr_id
	LEFT JOIN es_optional_attrhead oah
		ON oah.id_optional_attrhead = oad.head_id
	LEFT JOIN es_member seller
		ON op.seller_id = seller.id_member
	LEFT JOIN es_member buyer
		ON o.buyer_id = buyer.id_member
	WHERE op.seller_id = :member_id OR o.buyer_id = :member_id
</select>

<select id="updateTransactionStatus">
	CALL `es_sp_updateTransactionStatus` (:status, :order_product_id, :order_id, :invoice_num, :member_id )
</select>

<select id="checkTransaction">
	SELECT eo.id_order
	FROM es_order eo
	INNER JOIN es_order_product ep
		ON eo.id_order = ep.order_id AND eo.id_order = :order_id AND eo.buyer_id = :buyer AND ep.seller_id = :seller
</select>

</map>
