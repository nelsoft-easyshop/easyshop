<?xml version='1.0' ?>
<map>
	

<select id="get_address">
	SELECT
	   `streetno`
	  , `streetname`
	  , `barangay`
	  , `citytown`
	  , `country`
	  , `postalcode`
	  , `type`
	  , `telephone`
	  , `mobile`
	  , `consignee`
	FROM `es_address`
	WHERE TYPE = 1
	AND id_member = :id_member
	limit 1
</select>

<select id="payment_transaction">
	CALL es_sp_Payment_order_temp(
		:invoice_no,
		:total_amt,
		:ip,
		:member_id,
		:string,
		:product_count
	)
</select>

<select id="getTransactionDetails">
	SELECT o.id_order, buyer.username as buyer, buyer.email as buyer_email, DATE_FORMAT(o.dateadded, "%D %M %Y") as dateadded, o.total as totalprice, op.id_order_product, seller.id_member as seller_id, seller.username as seller, seller.email as seller_email, p.name, op.order_quantity, op.price as baseprice, op.tax, op.total as finalprice, attr.name as attr_name, pattr.attr_value
	FROM es_order o
	INNER JOIN es_order_product op 
		ON op.order_id = o.id_order AND o.buyer_id = :buyer_id AND o.id_order = :order_id
	INNER JOIN es_product p
		ON op.product_id = p.id_product
	LEFT JOIN es_order_option opt
		ON opt.order_product_id = op.id_order_product
	LEFT JOIN es_product_attr pattr
		ON pattr.id_product_attr = opt.product_attr_id 
	LEFT JOIN es_attr attr
		ON opt.attr_id = attr.id_attr
	LEFT JOIN es_member seller
		ON op.seller_id = seller.id_member
	LEFT JOIN es_member buyer
		ON o.buyer_id = buyer.id_member
</select>

<select id="updateTransactionStatus">
	CALL `es_sp_updateTransactionStatus` (:status, :order_product_id, :order_id )
</select>

</map>
